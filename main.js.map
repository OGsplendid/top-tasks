{"version":3,"file":"main.js","mappings":"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","sources":["webpack://top-tasks/./src/components/task/Task.js","webpack://top-tasks/./src/components/table-board/Table-board.js","webpack://top-tasks/./src/js/app.js","webpack://top-tasks/./src/components/filter/Filter.js","webpack://top-tasks/./src/js/find-match.js"],"sourcesContent":["export default class Task {\n  constructor(text) {\n    this.text = text;\n  }\n\n  create() {\n    const li = document.createElement('li');\n    const taskText = document.createElement('span');\n    const taskIcon = document.createElement('img');\n\n    li.classList.add('task');\n    taskText.classList.add('task-text');\n    taskIcon.classList.add('icon');\n\n    taskText.textContent = this.text;\n    taskIcon.src = 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS5tE4w4-OhqIcoQjrR5kYnhhAyRrL1tFj6Zw&usqp=CAU';\n\n    li.insertAdjacentElement('afterbegin', taskText);\n    li.insertAdjacentElement('beforeend', taskIcon);\n\n    return li;\n  }\n}\n","import Task from '../task/Task';\n\nexport default class TableBoard {\n  constructor(element) {\n    this.element = element;\n\n    this.tasks = [];\n\n    this.pinnedSection = document.querySelector('.task-section-pinned');\n    this.taskSection = document.querySelector('.task-section');\n\n    this.rangeTask = this.rangeTask.bind(this);\n    this.element.addEventListener('click', this.rangeTask);\n  }\n\n  set tasks(array) {\n    this._tasks = array;\n  }\n\n  get tasks() {\n    return this._tasks;\n  }\n\n  static createTaskElement(taskObject) {\n    const task = new Task(taskObject.text);\n    return task.create();\n  }\n\n  pinTask(taskText) {\n    const task = this.tasks.find((el) => el.text === taskText);\n    task.pinned = true;\n    this.renderBoard(this.tasks);\n  }\n\n  unpinTask(taskText) {\n    const task = this.tasks.find((el) => el.text === taskText);\n    task.pinned = false;\n    this.renderBoard(this.tasks);\n  }\n\n  rangeTask(e) {\n    if (!e.target.classList.contains('icon')) {\n      return;\n    }\n    const taskText = e.target.closest('.task').querySelector('.task-text').textContent;\n    const taskObject = this.tasks.find((el) => el.text === taskText);\n    if (!taskObject.pinned) {\n      this.pinTask(taskObject.text);\n    } else {\n      this.unpinTask(taskObject.text);\n    }\n  }\n\n  static switch(el) {\n    const taskIcon = el.querySelector('.icon');\n    if (taskIcon.src === 'https://w7.pngwing.com/pngs/294/523/png-transparent-circle-font-circle-orange-sphere-circle.png') {\n      taskIcon.src = 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS5tE4w4-OhqIcoQjrR5kYnhhAyRrL1tFj6Zw&usqp=CAU';\n    } else {\n      taskIcon.src = 'https://w7.pngwing.com/pngs/294/523/png-transparent-circle-font-circle-orange-sphere-circle.png';\n    }\n  }\n\n  checkPinnedTasks() {\n    const hiddenSection = document.querySelector('.no-tasks');\n    if (!this.tasks.some((el) => el.pinned === true)) {\n      this.pinnedSection.classList.add('hidden');\n      hiddenSection.classList.remove('hidden');\n      return;\n    }\n    this.pinnedSection.classList.remove('hidden');\n    hiddenSection.classList.add('hidden');\n  }\n\n  clearDOM() {\n    if (this.element.querySelector('.task')) {\n      const items = this.element.querySelectorAll('.task');\n      items.forEach((el) => el.remove());\n    }\n  }\n\n  renderBoard(array) {\n    this.clearDOM();\n    this.checkPinnedTasks();\n\n    if (array.length === 0) {\n      return;\n    }\n\n    for (const item of array) {\n      const task = TableBoard.createTaskElement(item);\n      if (item.pinned) {\n        TableBoard.switch(task);\n        this.pinnedSection.insertAdjacentElement('beforeend', task);\n      } else {\n        this.taskSection.insertAdjacentElement('beforeend', task);\n      }\n    }\n  }\n}\n","import '../css/style.css';\nimport Filter from '../components/filter/Filter';\nimport TableBoard from '../components/table-board/Table-board';\n\nconst filterElement = new Filter(document.querySelector('.filter-widget-form'));\nconst board = new TableBoard(document.querySelector('.table-board'));\nboard.renderBoard(board.tasks);\n","import TableBoard from '../table-board/Table-board';\nimport findMatch from '../../js/find-match';\n\nexport default class Filter {\n  constructor(element) {\n    this.element = element;\n    this.inputText = document.querySelector('.filter-text');\n    this.icons = document.querySelectorAll('.icon');\n\n    this.board = new TableBoard(document.querySelector('.table-board'));\n\n    this.onFilter = this.onFilter.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.element.addEventListener('input', this.onFilter);\n    this.element.addEventListener('submit', this.onSubmit);\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const text = this.inputText.value.trim();\n    if (!text) {\n      console.log('There\\'s no text');\n      return;\n    }\n    const taskObject = {\n      text,\n      pinned: false,\n    };\n    this.board.tasks.push(taskObject);\n    this.element.reset();\n    this.board.renderBoard(this.board.tasks);\n  }\n\n  onFilter(e) {\n    const text = this.inputText.value;\n    if (!text) {\n      this.board.renderBoard(this.board.tasks);\n    }\n    const filtered = this.board.tasks.filter((el) => findMatch(el.text, text));\n    this.board.renderBoard(filtered);\n  }\n}\n","export default function findMatch(el, text) {\n  const clean = text.trim().toLowerCase();\n  return el.toLowerCase().includes(clean);\n}\n"],"names":["Task","constructor","text","this","create","li","document","createElement","taskText","taskIcon","classList","add","textContent","src","insertAdjacentElement","TableBoard","element","tasks","pinnedSection","querySelector","taskSection","rangeTask","bind","addEventListener","array","_tasks","createTaskElement","taskObject","pinTask","find","el","pinned","renderBoard","unpinTask","e","target","contains","closest","checkPinnedTasks","hiddenSection","some","remove","clearDOM","querySelectorAll","forEach","length","item","task","switch","inputText","icons","board","onFilter","onSubmit","preventDefault","value","trim","console","log","push","reset","filtered","filter","clean","toLowerCase","includes","findMatch"],"sourceRoot":""}